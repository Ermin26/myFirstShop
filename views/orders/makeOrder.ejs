<!DOCTYPE html>
<html lang="sl-SI">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
    <link rel="stylesheet" href="/css/allPages.css">
    <link rel="stylesheet" href="/css/order.css">
    <title>Place order</title>
</head>

<body>
    <%- include('../partials/nav.ejs') %>

    <div class="container text-center justify-content-center" style="margin-bottom: 15vh; margin-top: 20vh;">
        <%- include('../../flash') %>
            <div class="info text-center">
                <div class="row row-cols-2 mt-5 g-2 ms-auto me-auto">
                    <div class="col-12 col-lg-5">
                        <div class="card">
                            <div class="d-flex justify-content-between p-2">
                                <h3 class="d-inlines">Košarica</h3>
                                <p class="d-inline-flex"><a href="/cart">Uredi</a></p>
                            </div>
                            <div class="card-body">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>Izdelek</th>
                                            <th>Količina</th>
                                            <th>Cena</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% for(product of cart) {%>
                                            <tr>
                                                <td class="text-left d-flex align-items-center">
                                                    <% for(let allData of items) {%>
                                                        <% for(let images of allData) {%>
                                                            <% if(product.sku === images.sku) {%>
                                                    <img src="<%= images.img_link[0] %>" class="img-fluid" alt="" style="width: 60px; height: 60px; border-radius: 50%; object-fit:cover; object-position: center;">
                                                    <% } %>
                                                    <% } %>
                                                    <% } %>
                                                  <p class="d-flex align-items-center m-0 ms-2"><%= product.name%> - <%= product.color%>-#<%= product.size %></p>
                                                </td>
                                                <td class="align-middle">
                                                    <%= product.qty %>
                                                </td>
                                                <td class="align-middle">
                                                    <%= product.price %> €
                                                </td>
                                            </tr>
                                            <% } %>
                                    </tbody>
                                </table>

                            </div>
                            <div class="card-footer d-flex justify-content-between">
                                <div class="col-8 text-start">
                                    <ul>
                                        <li>Skupaj</li>
                                        <li>Dostava</li>
                                        <li>Popust</li>
                                        <% if(total < 50) {%>
                                            <li class="text-warning"> Znesek do 10% popusta</li>
                                            <% } %>
                                        <li><strong>Za plačilo</strong></li>
                                    </ul>
                                </div>
                                <div class="col-4 d-flex flex-column text-end">
                                    <strong><%= total %> €</strong>
                                    <strong>0.00 €</strong>
                                    <% if(total > 50) {%>
                                        <strong >10%</strong>
                                    <% }else{ %>
                                    <strong>0.00 €</strong>
                                    <strong class="text-warning"><%= 50 - total %></strong>
                                    <% } %>
                                    <% if(total > 50) {%>
                                    <strong>
                                        <%=  totalPrice %> €
                                    </strong>
                                    <% }else{%>
                                    <strong>
                                        <%= total %> €
                                    </strong>
                                    <% } %>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-12 col-lg-5 ms-auto me-auto">
                    <form id="payment-form" action="/placeOrder" method="POST">
                        <div id="payment-element">
                            <!--Stripe.js injects the Payment Element-->
                                        </div>
                        <div class="col">
                            <div id="address-element">
                <!--Stripe.js injects the Payment Element-->
                            </div>
                            <div id="link-authentication-element">
                            </div>
                        </div>
                        <button type="submit" class="btn btn-outline-primary mt-4 mb-5" id="submit-button">Pay Now</button>
                    </form>
                    </div>
                </div>
            </div>
        </div>

                <%- include('../partials/footer.ejs') %>
                    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"
                        integrity="sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3"
                        crossorigin="anonymous"></script>
                    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js"
                        integrity="sha384-cuYeSxntonz0PPNlHhBs68uyIAVpIIOZZ5JqeqvYYIcEL727kskC66kF92t6Xl2V"
                        crossorigin="anonymous"></script>

<script src="https://js.stripe.com/v3/"></script>

<script>

        addEventListener('DOMContentLoaded',async()=>{
            const {publishableKey, SERVER_URL, user_id} = await fetch('/config').then((r) => r.json());
            const stripe = Stripe(publishableKey);
            const apiKey = publishableKey;

            const {error: backendError,clientSecret} = await fetch('/fetchOrder').then(r => r.json());
            if (backendError) {
                console.log("Error: ",backendError);
            }

            const appearance = {
                theme: 'flat',
                labels: 'floating',
            };
                const options = {
                mode :'shipping',
                allowedCountries:['SI','AT','BG','HR', 'HU', 'RO','SK'],
                fields:{
                    phone: 'always',
                },
            }

             // Pass the appearance object to the Elements instance
                const elements = stripe.elements({clientSecret, appearance});

            // Create a card element and mount it to the card element container
                const addressElement = elements.create("address", options);
                addressElement.mount("#address-element");
                const paymentElement = elements.create('payment',{
                    paymentMethodOrder:['card', 'paypal'],

                });
                paymentElement.mount('#payment-element');
                const linkAuthenticationElement = elements.create("linkAuthentication");
                linkAuthenticationElement.mount("#link-authentication-element");

                let paymentMethod =[];

                paymentElement.on('change', function(event){
                    paymentMethod.pop();
                    paymentMethod.push(event.value.type);

                })

                let addressData = {};

                addressElement.on('change', function(event) {
                    if (event.complete) {
                            // extract potentially complete address
                            addressData = event.value;
                        }
                    });
                let emailData = [];
                
                linkAuthenticationElement.on('change', function(event) {
                        if(event.complete){
                            emailData.pop();
                            emailData.push(event.value.email);
                        }
                    })
                    const form = document.getElementById('payment-form');
                        form.addEventListener('submit', async (event) => {
                            event.preventDefault();
                        // Disable the submit button to prevent multiple clicks
                        document.getElementById('submit-button').disabled = true;
                        if(addressData.name && addressData.address.line1 && addressData.address.country && addressData.address.city && addressData.address.postal_code && addressData.phone && emailData.length){
                        const billingDetails = {
                            name: addressData.name,
                            email: emailData[0],
                            address: {
                                line1: addressData.address.line1,
                                country: addressData.address.country,
                                city: addressData.address.city,
                                postal_code: addressData.address.postal_code,
                            },
                            phone: addressData.phone,
                        };
                            elements.submit();
                             const result = await stripe.confirmPayment({
                                        clientSecret,
                                        elements,
                                        confirmParams: {
                                            return_url: `${SERVER_URL}/payment`,
                                            },
                                         // redirect: 'if_required',
                                        billing_details: {
                                            name: billingDetails.name,
                                            email : billingDetails.email ,
                                            address:{
                                                line1: billingDetails.address.line1,
                                                country: billingDetails.address.country,
                                                city: billingDetails.address.city,
                                                postal_code: billingDetails.address.postal_code
                                            },
                                            phone: billingDetails.phone
                                        },
                                        metadata: {
                                            user_id: user_id,
                                        },
                                        receipt_email: billingDetails.email,
                                        payment_method_data: {
                                            billing_details: {
                                            name: billingDetails.name,
                                            email : billingDetails.email ,
                                            address:{
                                                line1: billingDetails.address.line1,
                                                country: billingDetails.address.country,
                                                city: billingDetails.address.city,
                                                postal_code: billingDetails.address.postal_code
                                            },
                                            phone: billingDetails.phone
                                        },
                                        }
                                   
                                    });
                                   if(result.error){
                                    console.log(result.error);
                                   // window.alert(result.error.message); make modal for this
                                    document.getElementById('submit-button').disabled = false;
                                   // window.location.reload();
                                   }
                                }else{
                                    window.alert('Polja za naslov dostave so obvezna')
                                    window.location.reload();
                                }

                            });             
        });



</script>
