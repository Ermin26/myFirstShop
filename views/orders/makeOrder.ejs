<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
    <link rel="stylesheet" href="/css/order.css">
    <title>Place order</title>
</head>

<body>
    <%- include('../partials/nav.ejs') %>

    <div class="container text-center justify-content-center" style="margin-bottom: 15vh;">
        <%- include('../../flash') %>
            <div class="info text-center">
                <div class="row row-cols-2 mt-5 g-2 ms-auto me-auto">
                    <div class="col-12 col-lg-5">
                        <div class="card">
                            <div class="d-flex justify-content-between p-2">
                                <h3 class="d-inlines">Košarica</h3>
                                <p class="d-inline-flex"><a href="/cart">Uredi</a></p>
                            </div>
                            <div class="card-body">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>Izdelek</th>
                                            <th>Količina</th>
                                            <th>Cena</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% for(product of cart) {%>
                                            <tr>
                                                <td class="text-left d-flex align-items-center">
                                                    <% for(let allData of items) {%>
                                                        <% for(let images of allData) {%>
                                                            <% if(product.sku === images.sku) {%>
                                                    <img src="<%= images.img_link[0] %>" class="img-fluid" alt="" style="width: 60px; height: 60px; border-radius: 50%; object-fit:cover; object-position: center;">
                                                    <% } %>
                                                    <% } %>
                                                    <% } %>
                                                  <p class="d-flex align-items-center m-0 ms-2"><%= product.name%> - <%= product.color%>-#<%= product.size %></p>
                                                </td>
                                                <td>
                                                    <%= product.qty %>
                                                </td>
                                                <td>
                                                    <%= product.price %> €
                                                </td>
                                            </tr>
                                            <% } %>
                                    </tbody>
                                </table>

                            </div>
                            <div class="card-footer d-flex justify-content-between">
                                <div class="col-8 text-start">
                                    <ul>
                                        <li>Subtotal:</li>
                                        <li>Dostava</li>
                                        <li>Popust</li>
                                        <li><strong>Za plačilo</strong></li>
                                    </ul>
                                </div>
                                <div class="col-4 d-flex flex-column text-end">
                                    <strong><%= total %> €</strong>
                                    <strong>0.00 €</strong>
                                    <% if(total > 50) {%>
                                        <strong>10%</strong>
                                    <% }else{ %>
                                    <strong>0.00 €</strong>
                                    <% } %>
                                    <% if(total > 50) {%>
                                    <strong>
                                        <%=  total - (total * 0.10).toFixed(2) %> €
                                    </strong>
                                    <% }else{%>
                                    <strong>
                                        <%= total %> €
                                    </strong>
                                    <% } %>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="col-12 col-lg-5 ms-auto me-auto">
                    <form id="payment-form" action="/placeOrder" method="POST">
                        
                        <div class="col">   
                            <div id="address-element">
                <!--Stripe.js injects the Payment Element-->
                            </div>
                         <div id="link-authentication-element">
                         </div>
                            <div id="payment-element">
                <!--Stripe.js injects the Payment Element-->
                            </div>
                        </div>
                        
           
                        <button type="submit" id="submit-button">Pay Now</button>
                    </form> 
                    </div>
                </div>
            </div>
        </div>

                <%- include('../partials/footer.ejs') %>
                    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"
                        integrity="sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3"
                        crossorigin="anonymous"></script>
                    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js"
                        integrity="sha384-cuYeSxntonz0PPNlHhBs68uyIAVpIIOZZ5JqeqvYYIcEL727kskC66kF92t6Xl2V"
                        crossorigin="anonymous"></script>
                    <script src="https://js.stripe.com/v3/"></script>
<script>

        addEventListener('DOMContentLoaded',async()=>{
            
            //const stripe = Stripe('pk_live_51MdvPOHAKJ9ybQgY3lEYJQ1TxLDsLlBVnPJestkYEqooVkmGw1pbatap5URKu7pN5T4RqAYotFAcWYdP9luqxwjY00Ky97oD6B');
            const {publishableKey} = await fetch('/config').then((r) => r.json());
            const stripe = Stripe(publishableKey);
            const apiKey = publishableKey;
            // const clientSecret = <= clientSecret %>
             
             const {
             error: backendError,
             clientSecret
            } = await fetch('/fetchOrder').then(r => r.json());
            if (backendError) {
                console.log("this is fucking error",backendError);
            }
            console.log(`Client secret returned.`);
        
            const appearance = {
                        /*
                        //theme: 'night',
                        labels: 'floating',
                        variables: {
    fontFamily: 'Sohne, system-ui, sans-serif',
    fontWeightNormal: '500',
    borderRadius: '8px',
    colorBackground: '#0A2540',
    colorPrimary: 'white',
    colorPrimaryText: 'white',
    colorText: 'white',
    colorTextSecondary: 'white',
    colorTextPlaceholder: '#3f403f',
    colorIconTab: 'dark',
    colorLogo: 'dark'
  },
                        rules: {
                            '.Tab': {
                              border: '2px solid var(--colorTextPlaceholder)',
                              boxShadow: '0px 1px 1px rgba(0, 0, 0, 0.03), 0px 3px 6px rgba(18, 42, 66, 0.02)',
                            },

                            '.Tab:hover': {
                             color: 'var(--colorText)',
                             background: 'var(--colorTextPlaceholder)'
                            },

                            '.Tab--selected': {
                             borderColor: '#e81510',
                             boxShadow: '0px 1px 1px rgba(0, 0, 0, 0.03), 0px 3px 6px rgba(18, 42, 66, 0.02), 0 0 0 2px var(--colorPrimary)',
                            },
                        
                            '.Input--invalid': {
                              boxShadow: '0 1px 1px 0 rgba(0, 0, 0, 0.07), 0 0 0 2px var(--colorDanger)',
                            },
                            '.Checkbox--checked': {
                                display: 'none'
                            },
                            '.CheckboxInput--checked': {
                                display: 'none'
                            },
                            '.CheckboxLabel--checked':{
                                display: 'none'
                            }
                           

      // See all supported class names and selector syntax below
                            },
                        */
                        };
                   
                const options = {
                mode :'shipping', 
                allowedCountries:['SI','AT','BG','HR', 'HU', 'RO','SK'],
                fields:{
                    phone: 'always',
                },
            }    

             // Pass the appearance object to the Elements instance
             const elements = stripe.elements({clientSecret, appearance});

            // Create a card element and mount it to the card element container
                const addressElement = elements.create("address", options);
                addressElement.mount("#address-element");
                const paymentElement = elements.create('payment');
                paymentElement.mount('#payment-element');
                const linkAuthenticationElement = elements.create("linkAuthentication");
                linkAuthenticationElement.mount("#link-authentication-element");
               
                let addressData = {};
                        

                addressElement.on('change', function(event) {
                    if (event.complete) {
                            // extract potentially complete address
                            addressData = event.value;
                        }
                    });
                    
                let emailData = [];
                
                linkAuthenticationElement.on('change', function(event) {
                        if(event.complete){
                            emailData.pop();
                            emailData.push(event.value.email);
                            console.log("event email: ", emailData)
                        }
                    })
        
                    const form = document.getElementById('payment-form');
                        form.addEventListener('submit', async (event) => {
                            event.preventDefault();
                        // Disable the submit button to prevent multiple clicks
                        document.getElementById('submit-button').disabled = true;
                        const billingDetails = {
                            name: addressData.name,
                            email: emailData[0],
                            address: {
                                line1: addressData.address.line1,
                                country: addressData.address.country,
                                city: addressData.address.city,
                                postal_code: addressData.address.postal_code,
                            },
                            phone: addressData.phone,
                        };
                        // Create a payment intent on the server
                            const response = await fetch('/placeOrder', {
                                method: 'POST',
                                headers: {
                                    Authorization: `Bearer ${apiKey}`,
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({
                                    billing_details: billingDetails,
                                }),
                            });
                            
                            if (response.ok) {
                                const data = await response.json(); // Parse the JSON response
                                const { clientSecret } = data; // Access the clientSecret
                                // ... rest of your code ...ž
                                
                                const result = await stripe.confirmPayment({
                                    clientSecret, 
                                    confirmParams: {
                                        return_url: 'localhost:5000/',
                                    },
                                    billing_details: billingDetails,
                                });
                            
                                if (result.error) {
                                        // Display an error message to the user
                                        console.error("This is your error",result.error.message);
                                    } else {
                                        console.log("Payment successful, redirect or show a success message");
                                        window.location.href = '/'
                                        console.log('Payment succeeded!');
                                    }
                                        
                            } else {
                                console.error('Error placing order'); // Handle the error case
                            }
                            
                            });

        })



</script>