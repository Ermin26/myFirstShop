<% layout('layouts/boilerplate') %>

    <style>
        .card-element {
            border: 1px solid #ccc;
            padding: 10px;
            border-radius: 4px;
        }
    </style>

    <form id="payment-form" action="/checkoutToPay" method="POST">
        <div class="row row-cols-2">
            <div class="col bg-info">

                <label for="name">Ime</label>
                <input type="text" id="name" name="name" required>

                <div>
                    <label for="lastName">Priimek</label>
                    <input type="text" id="lastName" name="lastName" required>
                </div>
                <div>
                    <label for="email">Email</label>
                    <input type="email" id="email" name="email" required>
                </div>

                <div>
                    <label for="country">Country</label>
                    <input type="text" id="country" name="country" required>
                </div>
            </div>
            <div class="col">
                <div>
                    <label for="city">City</label>
                    <input type="text" id="city" name="city" required>
                </div>
                <div>
                    <label for="zip">ZIP Code</label>
                    <input type="text" id="zip" name="zip" required>
                </div>
                <div>
                    <label for="phone">Phone</label>
                    <input type="text" id="phone" name="phone" required>
                </div>
            </div>
            <div id="link-authentication-element">
                <!--Stripe.js injects the Link Authentication Element-->
              </div>
              <div id="payment-element">
                <!--Stripe.js injects the Payment Element-->
              </div>
            <div id="card-element">
                <!-- Stripe.js will insert the card input elements here -->
            </div>
            <button type="submit" id="submit-button">Pay Now</button>
        </div>
    </form>

    <script src="https://js.stripe.com/v3/"></script>
    <script>
        addEventListener('DOMContentLoaded',async () =>{
        // Set up Stripe.js with your publishable key
        const stripe = Stripe(`<%= s_pk %>`);
            const {
    error: backendError,
    clientSecret
  } = await fetch('/test-stripe').then(r => r.json());
  if (backendError) {
    console.log(backendError);
  }
  console.log(`Client secret returned.`);
        // Create an instance of elements
        const appearance = {
  theme: 'night',
  variables: {
    fontFamily: 'Sohne, system-ui, sans-serif',
    fontWeightNormal: '500',
    borderRadius: '8px',
    colorBackground: '#0A2540',
    colorPrimary: '#EFC078',
    colorPrimaryText: '#1A1B25',
    colorText: 'white',
    colorTextSecondary: 'white',
    colorTextPlaceholder: '#727F96',
    colorIconTab: 'white',
    colorLogo: 'dark'
  },
  rules: {
    '.Input, .Block': {
      backgroundColor: 'transparent',
      border: '1.5px solid var(--colorPrimary)'
    }
  }
};

// Pass the appearance object to the Elements instance
const elements = stripe.elements({clientSecret, appearance});

        // Create a card element and mount it to the card element container

        const paymentElementOptions = {
    layout: "tabs",
  };

  const paymentElement = elements.create("payment", paymentElementOptions);
  paymentElement.mount("#payment-element");

  
        // Handle form submission
        const form = document.getElementById('payment-form');
        form.addEventListener('submit', async (event) => {
            event.preventDefault();

            // Disable the submit button to prevent multiple clicks
            document.getElementById('submit-button').disabled = true;

            const formData = new FormData(form);
            const firstName = formData.get('name')
            const lastName = formData.get('lastName')
            const billingDetails = {
                name: firstName + ' ' + lastName,
                email: formData.get('email'),
                address: {
                    country: formData.get('country'),
                    city: formData.get('city'),
                    street: formData.get('street'),
                    postal_code: formData.get('zip'),
                },
                phone: formData.get('phone'),
            };

            // Create a payment intent on the server
            const response = await fetch('/placeOrder', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    billing_details: billingDetails,
                }),
            });
            const { clientSecret } = await response.json();

            // Confirm the payment with the client secret and card details
            //const result = await stripe.confirmCardPayment(clientSecret, {
            const result = await stripe.confirmCardPayment(clientSecret, {
                payment_method: {
                    card: cardElement,
                    billing_details: billingDetails,
                },
            });

            if (result.error) {
                // Display an error message to the user
                console.error(result.error.message);
            } else {
                // Payment successful, redirect or show a success message
                console.log('Payment succeeded!');
            }
        });
    })
        </script>